
version: 1

before:
  hooks: #execute custom commands or scripts on pre/post build pre/post release
    - go mod tidy
    - go generate ./...

builds: #configure how the app will be built via GOOS/GOARCH/GOARM
  - env:
      - CGO_ENABLED=0
    goos:
      - linux
      - windows
      - darwin

archives: #customize the archive name, file, binary file produced by the build
  - format: tar.gz
    name_template: >-
      {{ .ProjectName }}_
      {{- title .Os }}_
      {{- if eq .Arch "amd64" }}x86_64
      {{- else if eq .Arch "386" }}i386
      {{- else }}{{ .Arch }}{{ end }}
      {{- if .Arm }}v{{ .Arm }}{{ end }}
    # use zip for windows archives
    format_overrides:
      - goos: windows
        format: zip

changelog: # identify any new features, edits, and bug fixes inherent in each new release
  use: github


  sort: asc

  groups:
    - title: Features
      regexp: '^.*?feat(\([[:word:]]+\))??!?:.+$'
      order: 0
    - title: "Bug fixes"
      regexp: '^.*?bug(\([[:word:]]+\))??!?:.+$'
      order: 1
    - title: "Release"
      regexp: '^.*?release(\([[:word:]]+\))??!?:.+$'
      order: 1
    - title: Others
      order: 999

  filters:
    include:
      - "^feat"
      - "^bug"
      - "^release"

# .goreleaser.yaml
announce:
  slack:
    # Whether its enabled or not.
    enabled: true

    # Message template to use while publishing.
    #
    # Default: '{{ .ProjectName }} {{ .Tag }} is out! Check it out at {{ .ReleaseURL }}'
    # Templates: allowed
    message_template: |
      iTower {{.Tag}} is out!
      
      {{if .changelog}}
      *Changelog:*
      {{.changelog}}
      {{end}}

    # The name of the channel that the user selected as a destination for webhook messages.
    channel: 'releases'

    # Set your Webhook's user name.
    username: 'Goreleaser'

    # Emoji to use as the icon for this message. Overrides icon_url.
    icon_emoji: ':rocket:'

    # URL to an image to use as the icon for this message.
    icon_url: ''

    # Blocks for advanced formatting, see: https://api.slack.com/messaging/webhooks#advanced_message_formatting
    # and https://api.slack.com/messaging/composing/layouts#adding-blocks.
    #
    # Attention: goreleaser doesn't check the full structure of the Slack API: please make sure that
    # your configuration for advanced message formatting abides by this API.
    #
    # Templates: allowed
    blocks: []


    attachments: []